?direct.label
direct.label(TF21_curves, 'top.points')
direct.label(TF21_curves, 'first.points')
?direct.label
direct.label(TF21_curves, 'last.qp')
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method, color = Method)) +
geom_line(color = black) +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method, color = Method)) +
geom_line(color = 'black') +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
direct.label(TF21_curves, 'last.qp')
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
TF21_curves_df$num_TFs / 21 * 100
TF21_curves_df <- TF21_freq_curves %>%
unnest(curve_data) %>%
filter(Method != 'PSCV') %>%
mutate(Method = fct_relevel(Method, 'FSCV', 'CV')) %>%
mutate(label_pos = pct == .7 & (abs(num_TFs / 21 * 100  - 95.238095) <= 1e-8))
TF21_curves_df
TF21_curves_df$label_pos
abs(TF21_curves_df$num_TFs / 21 * 100  - 95.238095) <= 1e-8
abs(TF21_curves_df$num_TFs / 21 * 100  - 95.238095)
TF21_curves_df <- TF21_freq_curves %>%
unnest(curve_data) %>%
filter(Method != 'PSCV') %>%
mutate(Method = fct_relevel(Method, 'FSCV', 'CV')) %>%
mutate(label_pos = pct == .7 & (abs(num_TFs / 21 * 100  - 95.238095) <= 1e-4))
TF21_curves_df$label_pos
which(TF21_curves_df$label_pos)
TF21_curves_df$pct == .7
TF21_curves_df %>% filter(pct == .7)
?geom_text
?case_when
TF21_curves_df <- TF21_freq_curves %>%
unnest(curve_data) %>%
filter(Method != 'PSCV') %>%
mutate(Method = fct_relevel(Method, 'FSCV', 'CV')) %>%
mutate(label_pos = pct == .7) %>%
mutate(label_pos2 = case_when(
label_pos & Method == 'FSCV' ~ 'FSCV',
label_pos & Method == 'CV' ~ 'CV',
!label_pos ~ ''
))
TF21_curves_df$label_pos2
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_Tfs / 21 * 100, label = label_pos2)) +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_TFs / 21 * 100, label = label_pos2)) +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
?geom_text
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_TFs / 21 * 100, label = label_pos2), nudge_y = 1) +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_TFs / 21 * 100, label = label_pos2), nudge_y = 2) +
scale_x_reverse() +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
TF21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_TFs / 21 * 100, label = label_pos2), nudge_y = 2) +
scale_x_reverse() +
guides(linetype = F) +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_curves
F21_curves <- ggplot(TF21_curves_df %>% filter(pct >= .5), aes(x = pct * 100, y = num_TFs / 21 * 100, linetype = Method)) +
geom_line() +
geom_text(aes(x = pct * 100, y = num_TFs / 21 * 100, label = label_pos2), nudge_y = 2) +
scale_x_reverse() +
guides(linetype = F) +
labs(x = 'Cut-off frequency (%)', y = 'Percent of TFs') +
theme_bw()
TF21_freq_df2 <- TF21_freq_df %>%
unnest(data) %>%
mutate(pct = freq / 200 * 100) %>%
filter(Method != 'PSCV')
TF21_freq_df3 <- TF21_freq_df2 %>%
dplyr::select(-idx, -freq) %>%
spread(Method, pct)
freq_brks <- seq(0, 100, by = 25)
leave_text <- c('MCM1', 'FKH2', 'MBP1', 'ACE2', 'SWI6', 'STE12', 'SWI4', 'NDD1', 'SWI5')
TF21_freq_df4 <- TF21_freq_df3 %>%
mutate(leave_text = !(TF %in% leave_text))
TF21_ident <- ggplot(TF21_freq_df4, aes(x = CV, y = FSCV, label = TF, alpha = leave_text)) +
geom_point(size = 1) +
geom_text_repel(size = 2.5, segment.size = .25) +
geom_abline(slope = 1, intercept = 0, linetype = 2) +
scale_alpha_discrete(name = '', labels = '', breaks = '', range = c(.6, 1)) +
scale_x_continuous(breaks = freq_brks, limits = c(0, 100)) +
scale_y_continuous(breaks = freq_brks, limits = c(0, 100)) +
theme_bw()
# grid.arrange(TF21_ident, TF21_curves, ncol = 2)
ggarrange(TF21_ident, TF21_curves, ncol = 2, labels = c('A', 'B'))
rm(list = ls())
pacman::p_load(tidyverse, forcats)
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
# ggplot(rank_df, aes(x = Method, y = Rank)) +
#   geom_boxplot() +
#   theme_bw()
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
# ggplot(card_df, aes(x = Method, y = Cardinality)) +
#   geom_boxplot() +
#   theme_bw()
comb_df <- bind_rows(rank_df, card_df) %>%
filter(Method != 'PSCV') %>%
mutate(type = fct_relevel(type, 'Rank'),
Method = fct_relevel(Method, 'FSCV', 'CV'))
comb_df
comb_df %>% spread(type, estimates)
comb_df %>% spread(type, Estimates)
stat_df <- comb_df %>%
group_by(Method, type) %>%
summarise(median = median(estiamtes))
stat_df <- comb_df %>%
group_by(Method, type) %>%
summarise(median = median(estimates))
stat_df <- comb_df %>%
group_by(Method, type) %>%
summarise(median = median(Estimates))
stat_df
stat_df <- comb_df %>%
group_by(Method, type) %>%
summarise(median = median(Estimates)) %>%
group_by(Method)
stat_df
(97 + 18 - 5) * 5
(45 + 18 - 7) * 7
stat_df <- comb_df %>%
group_by(Method, type) %>%
summarise(median = median(Estimates)) %>%
group_by(Method)
stat_df
(97 + 18 - 5) * 5
(45 + 18 - 7) * 7
(97 + 18 - 5) * 5 + 97 * log(exp(1) * 106 / 97)
(45 + 18 - 7) * 7 + 45 * log(exp(1) * 106 / 45)
(97 + 18 - 5) * 5 + 97 * log(exp(1) * 106 / 97)
(45.5 + 18 - 7) * 7 + 45.5 * log(exp(1) * 106 / 45.5)
rm(list = ls())
pacman::p_load(tidyverse, forcats, ggrepel, readr, readxl, gridExtra, ggpubr, directlabels)
TF_df <- readRDS('TF_names.rds') %>%
dplyr::rename(idx = pos)
all_freq_df <- data_frame(Method = sheet_names) %>%
mutate(data = map(Method, function(x) {read_xls(file_name, x) %>%
mutate(TF = TF_df$TF[idx])})) %>%
mutate(curve_data = map(data, function(x) {num_TFs <- map_dbl(brks, function(y) {sum(x$freq / 200 >= y)})
pct <- brks
data_frame(num_TFs = num_TFs, pct = pct)}))
rm(list = ls())
pacman::p_load(tidyverse, forcats, ggrepel, readr, readxl, gridExtra, ggpubr, directlabels)
TF_df <- readRDS('TF_names.rds') %>%
dplyr::rename(idx = pos)
######all frequencies
brks <- seq(1, 0, by = -.01)
sheet_names <- c('PSCV', 'FSCV', 'CV')
# plot_titles <- data_frame(sheet_names = sheet_names, plot_titles = c('Plug-in SCV', 'Fractional SCV', 'CV'))
file_name <- 'bootstrap_std_type2_all_freqs.xls'
all_freq_df <- data_frame(Method = sheet_names) %>%
mutate(data = map(Method, function(x) {read_xls(file_name, x) %>%
mutate(TF = TF_df$TF[idx])})) %>%
mutate(curve_data = map(data, function(x) {num_TFs <- map_dbl(brks, function(y) {sum(x$freq / 200 >= y)})
pct <- brks
data_frame(num_TFs = num_TFs, pct = pct)}))
all_freq_df
all_freq_df$data[[1]]
TF_df
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ . %>% filter(! (idx %in% TF_df$in_21))))
all_freq_df2$not21[[1]]
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ . %>% filter(! (idx %in% TF_df$in_21))))
all_freq_df2
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! (idx %in% TF_df$in_21))))
all_freq_df2
all_freq_df2$not21[[1]]
TF_df$in_21
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! TF_df$in_21)))
all_freq_df2
all_freq_df2
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! TF_df$in_21))) %>%
filter(Method != 'PSCV')
all_freq_df2$not21[[1]]
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! TF_df$in_21) %>% arrange(desc(freq)))) %>%
filter(Method != 'PSCV')
head(all_freq_df2$not21[[1]])
all_freq_df2
head(all_freq_df2$not21[[2]])
head(all_freq_df2$not21[[1]])
head(all_freq_df2$not21[[2]])
all_freq_df2$not21[[2]] %>%
filter(TF == 'MET4')
all_freq_df2$not21[[2]] %>%
filter(TF == 'MSS11')
all_freq_df2$not21[[2]] %>%
filter(TF == 'YJL206C')
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! TF_df$in_21))) %>%
filter(Method != 'PSCV')
all_freq_df2
all_freq_df2$not21[[1]]$freq - all-freq_df$not21[[2]]$freq
all_freq_df2$not21[[1]]$freq - all_freq_df2$not21[[2]]$freq
which.max(all_freq_df2$not21[[1]]$freq - all_freq_df2$not21[[2]]$freq)
source('~/Dropbox/Literature-Hoang/Working_papers/cross-validation/Code/applied_data/yeast/bootstrap_std_type2_freq_plots.R', echo=TRUE)
rm(list = ls())
pacman::p_load(tidyverse, forcats, ggrepel, readr, readxl, gridExtra, ggpubr, directlabels)
TF_df <- readRDS('TF_names.rds') %>%
dplyr::rename(idx = pos)
######all frequencies
brks <- seq(1, 0, by = -.01)
sheet_names <- c('PSCV', 'FSCV', 'CV')
# plot_titles <- data_frame(sheet_names = sheet_names, plot_titles = c('Plug-in SCV', 'Fractional SCV', 'CV'))
file_name <- 'bootstrap_std_type2_all_freqs.xls'
all_freq_df <- data_frame(Method = sheet_names) %>%
mutate(data = map(Method, function(x) {read_xls(file_name, x) %>%
mutate(TF = TF_df$TF[idx])})) %>%
mutate(curve_data = map(data, function(x) {num_TFs <- map_dbl(brks, function(y) {sum(x$freq / 200 >= y)})
pct <- brks
data_frame(num_TFs = num_TFs, pct = pct)}))
curves_df <- all_freq_df %>%
unnest(curve_data) %>%
filter(Method != 'PSCV') %>%
mutate(Method = fct_relevel(Method, 'FSCV', 'CV'))
ggplot(curves_df, aes(x = pct * 100, y = num_TFs / 106 * 100, linetype = Method)) +
geom_line() +
scale_x_reverse() +
labs(x = 'Cut off frequency', y = 'Percent of TFs') +
theme_bw()
all_freq_df2 <- data_frame(Method = sheet_names) %>%
mutate(data = map(Method, function(x) {read_xls(file_name, x) %>%
mutate(TF = TF_df$TF[idx])})) %>%
mutate(curve_data = map(data, function(x) {num_TFs <- map_dbl(brks, function(y) {sum(x$freq / 200 >= y)})
pct <- brks
data_frame(num_TFs = num_TFs, pct = pct)}))
curves_df2 <- all_freq_df2 %>%
unnest(curve_data) %>%
filter(Method != 'PSCV')
ggplot(curves_df2, aes(y = pct * 100, x = num_TFs, color = Method)) +
geom_line() +
scale_x_reverse() +
# labs(x = 'Cut off frequency', y = 'Percent of TFs') +
theme_bw()
#######
#######which TFs are not in TF21 but still have high frequencies?
all_freq_df2 <- all_freq_df %>%
mutate(not21 = map(data, ~ filter(., ! TF_df$in_21))) %>%
filter(Method != 'PSCV')
all_freq_df2
which.max(all_freq_df2$not21[[1]]$freq - all_freq_df2$not21[[2]]$freq)
all_freq_df2$not21[[1]] %>%
#######
all_freq_df2$not21[[1]] %>%
filter(idx == 66)
all_freq_df2$not21[[1]] %>%
filter(idx == 66)
all_freq_df2$not21[[2]] %>%
filter(idx == 66)
all_freq_df2$not21[[1]] %>%
filter(idx == 66)
all_freq_df2$not21[[1]]$freq - all_freq_df2$not21[[2]]$freq
all_freq_df2$not21[[1]] %>%
filter(idx == 85)
all_freq_df2$not21[[2]] %>%
filter(idx == 85)
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
rm(list = ls())
pacman::p_load(tidyverse, forcats)
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
# ggplot(rank_df, aes(x = Method, y = Rank)) +
#   geom_boxplot() +
#   theme_bw()
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
# ggplot(card_df, aes(x = Method, y = Cardinality)) +
#   geom_boxplot() +
#   theme_bw()
rm(list = ls())
pacman::p_load(tidyverse, forcats)
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
# ggplot(rank_df, aes(x = Method, y = Rank)) +
#   geom_boxplot() +
#   theme_bw()
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
# ggplot(card_df, aes(x = Method, y = Cardinality)) +
#   geom_boxplot() +
#   theme_bw()
rank_df
card_df
rank_df2 <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(rank = Estimates)
rank_df2 <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(rank = Estimates)
card_df2 <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(card = Estimates)
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method')
comb_df2
comb_df2$Method
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method') %>%
group_by(PSCV)
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method') %>%
group_by(Method)
comv_df2
comb_df2
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method') %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank)
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method') %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank) %>%
summarise(median = median(DF))
comb_df2
(97 + 18 - 5) * 5
(45.5 + 18 - 7) * 7
120000 / 3
rank_df
card_df
rank_df2
card_df2
rank_df2 <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(rank = Estimates)
card_df2 <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(card = Estimates)
?inner_join
card_df2 <- read_csv('bootstrap_std_type2_cards.csv')
card_df2
rank_df2 <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(rank = Estimates)
card_df2 <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(card = Estimates)
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method') %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank) %>%
summarise(median = median(DF))
comb_df2
comb_df2 <- inner_join(rank_df2, card_df2, by = 'Method')
comb_df2
comb_df2$rank
comb_df2 <- bind_cols(rank_df2, card_df2) %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank) %>%
summarise(median = median(DF))
comb_df2
comb_df2 <- bind_cols(rank_df2, card_df2)
comb_df2
comb_df2 <- bind_cols(rank_df2, card_df2) %>%
dplyr::select(-Method1)
comb_df2
?bind_cols
comb_df2 <- bind_cols(rank_df2, card_df2) %>%
dplyr::select(-Method1) %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank) %>%
summarise(median = median(DF))
COMB_DF2
comb_df2
rm(list = ls())
pacman::p_load(tidyverse, forcats)
rank_df2 <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(rank = Estimates)
card_df2 <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
dplyr::rename(card = Estimates)
comb_df2 <- bind_cols(rank_df2, card_df2) %>%
dplyr::select(-Method1) %>%
group_by(Method) %>%
mutate(DF = (card + 18 - rank) * rank) %>%
summarise(median = median(DF))
comb_df2
comb_df2 <- bind_cols(rank_df2, card_df2) %>%
dplyr::select(-Method1)
comb_df2
table(comb_df2$Method)
rm(list = ls())
pacman::p_load(tidyverse, spls, stringr)
data(yeast)
yeast$y
yeast$x
###the 21 experimentally verified TFs
exp_TF <- c('ACE2', 'SWI4', 'SWI5', 'SWI6', 'MBP1', 'STB1', 'FKH1', 'FKH2',
'NDD1', 'MCM1', 'ABF1', 'BAS1', 'CBF1', 'GCN4', 'GCR1', 'GCR2',
'LEU3', 'MET31', 'REB1', 'SKN7', 'STE12')
simp_names <- str_split(colnames(yeast$x), '_', simplify = T)[, 1]
X_names <- yeast$x
colnames(X_names) <- simp_names
X_names
exp_TF
not_exp <- setdiff(colnames(X_names), exp_TF)
not_exp
X_reorder <- X_names[, c(exp_TF, not_exp)]
X_reorder
colnames(X_reorder)
exp_TF
write_csv(as.data.frame(X_reorder), 'X_mat_order.csv', col_names = T)
rm(list = ls())
pacman::p_load(tidyverse, forcats)
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
# ggplot(rank_df, aes(x = Method, y = Rank)) +
#   geom_boxplot() +
#   theme_bw()
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
rank_df %>% group_by(Method) %>% summarise(median = median(Estimates))
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
card_df %>% group_by(Method) %>% summarise(median = median(Estimates))
err_df <- read_csv('bootstrap_std_type2_errs.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'MSE')
err_df <- read_csv('bootstrap_std_type2_errs.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'MSE')
rm(list = ls())
pacman::p_load(tidyverse, forcats)
err_df <- read_csv('bootstrap_std_type2_errs.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'MSE')
rank_df <- read_csv('bootstrap_std_type2_ranks.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Rank')
# ggplot(rank_df, aes(x = Method, y = Rank)) +
#   geom_boxplot() +
#   theme_bw()
card_df <- read_csv('bootstrap_std_type2_cards.csv') %>%
gather(Method, Estimates) %>%
mutate(type = 'Number of selected predictors')
comb_df <- bind_rows(err_df, rank_df, card_df) %>%
# filter(Method != 'PSCV') %>%
filter(Method != 'FSCV') %>%
mutate(type = fct_relevel(type, 'Rank'),
Method = fct_relevel(Method, 'PSCV', 'CV'))
comb_df
comb_df$type
?fct_relevel
comb_df <- bind_rows(err_df, rank_df, card_df) %>%
# filter(Method != 'PSCV') %>%
filter(Method != 'FSCV') %>%
mutate(type = fct_relevel(type, 'Rank', 'Number of selected predictors', 'MSE'),
Method = fct_relevel(Method, 'PSCV', 'CV'))
comb_df$type
ggplot(comb_df, aes(x = Method, y = Estimates)) +
geom_boxplot(fatten = 3.5) +
facet_wrap(~ type, scales = 'free_y') +
labs(x = '', y = '') +
theme_bw()
source('~/Dropbox/Literature-Hoang/Working_papers/cross-validation/Code/JRSSB_submit/yeast/bootstrap_std_type2_boxplots.R', echo=TRUE)
source('~/Dropbox/Literature-Hoang/Working_papers/cross-validation/Code/JRSSB_submit/yeast/bootstrap_std_type2_boxplots.R', echo=TRUE)
source('~/Dropbox/Literature-Hoang/Working_papers/cross-validation/Code/JRSSB_submit/yeast/bootstrap_std_type2_freq_plots.R', echo=TRUE)
source('~/Dropbox/Literature-Hoang/Working_papers/cross-validation/Code/JRSSB_submit/yeast/bootstrap_std_type2_freq_plots.R', echo=TRUE)
